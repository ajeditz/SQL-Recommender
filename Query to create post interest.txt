Query to create post_interest_view

CREATE OR REPLACE VIEW post_interest_view AS
SELECT 
    p.id AS post_id,
    p.user_id,
    p.caption,
    p.post_reference,
    p.deleted_at,
    p.created_at,
    p.updated_at,
    p.post_type,
    p.post_status,
    LOWER(GROUP_CONCAT(DISTINCT REPLACE(i.description, ' ', '') ORDER BY i.description)) AS processed_categories,
    LOWER(GROUP_CONCAT(DISTINCT REPLACE(i.name, ' ', '') ORDER BY i.name)) AS processed_subcategories
FROM posts p
LEFT JOIN post_categories pc ON p.id = pc.post_id
LEFT JOIN interests i ON pc.interest_id = i.id
GROUP BY p.id, p.user_id, p.caption, p.post_reference, p.deleted_at, 
         p.created_at, p.updated_at, p.post_type, p.post_status
HAVING processed_categories IS NOT NULL;



Query to make the users table

CREATE OR REPLACE VIEW user_followers_following AS
SELECT 
    u.user_id,

    -- User details from users table
    usr.bio,
    usr.gender,
    usr.country_id,
    usr.state_id,
    usr.city_id,

    -- List of user IDs the user is following
    COALESCE(GROUP_CONCAT(DISTINCT f.following_id ORDER BY f.following_id SEPARATOR ', '), '') AS following,

    -- List of user IDs who follow the user
    COALESCE(GROUP_CONCAT(DISTINCT f2.user_id ORDER BY f2.user_id SEPARATOR ', '), '') AS followers,

    -- List of interest categories the user is associated with
    COALESCE(GROUP_CONCAT(DISTINCT i.name ORDER BY i.name SEPARATOR ', '), '') AS interest_categories

FROM 
    (SELECT DISTINCT user_id FROM followers 
     UNION 
     SELECT DISTINCT following_id FROM followers) u  -- Get all unique user IDs

LEFT JOIN followers f ON u.user_id = f.user_id        -- Users they follow
LEFT JOIN followers f2 ON u.user_id = f2.following_id -- Users who follow them
LEFT JOIN users usr ON u.user_id = usr.id             -- User details

-- Join user_interests table to get interest IDs
LEFT JOIN user_interests ui ON u.user_id = ui.user_id

-- Join interests table to get category names
LEFT JOIN interests i ON ui.interest_id = i.id

GROUP BY u.user_id, usr.bio, usr.gender, usr.country_id, usr.state_id, usr.city_id;

